---
import Layout from "@/layouts/Layout.astro";
import { get_all_by_car_id } from "@/db/cars";

const id = Astro.url.searchParams.get("id");

const userCookie = Astro.cookies.get("authenticated");

if (!userCookie) {
    return Astro.redirect("/login");
}

if (!id) {
    return Astro.redirect("/404");
}

const result = await get_all_by_car_id(id);

if (!result) {
    return Astro.redirect("/");
}

const car = result.car;
const carInfo = result.info;
const photos = result.photos;
---

<Layout>
    <section class="form-section" style="margin-top: 15vh;">
        <form car-id={car.id} action="/api/cars/update">
            <fieldset>
                <legend>Información General</legend>
                <label
                    >Nombre:
                    <input type="text" name="name" value={car.name} required />
                </label>
                <label
                    >Modelo:
                    <input
                        type="text"
                        name="model"
                        value={car.model}
                        required
                    />
                </label>
                <label
                    >Descripción:
                    <textarea name="description" required
                        >{car.description}</textarea
                    >
                </label>
                <label
                    >Año:
                    <input
                        type="number"
                        name="year"
                        value={car.year}
                        required
                    />
                </label>
                <label
                    >¿Usado?
                    <input
                        type="checkbox"
                        name="is_used"
                        checked={car.is_used ? "checked" : ""}
                    />
                </label>
                <label
                    >¿Publicado?
                    <input
                        type="checkbox"
                        name="published"
                        checked={car.published ? "checked" : ""}
                    />
                </label>
            </fieldset>
            <button type="submit">Actualizar Información General</button>
        </form>
    </section>

    <section class="form-section">
        <form car-id={car.id} action="/api/info/update">
            <fieldset>
                <legend>Plantilla Técnica</legend>
                <label
                    >Kilometraje:
                    <input
                        type="text"
                        name="mileage"
                        value={carInfo.mileage}
                        required
                    />
                </label>
                <label
                    >Tracción:
                    <input
                        type="text"
                        name="traction"
                        value={carInfo.traction}
                        required
                    />
                </label>
                <label
                    >Tipo de Combustible:
                    <input
                        type="text"
                        name="fuel_type"
                        value={carInfo.fuel_type}
                        required
                    />
                </label>
                <label
                    >Transmisión:
                    <input
                        type="text"
                        name="transmission_type"
                        value={carInfo.transmission_type}
                        required
                    />
                </label>
                <label
                    >Capacidad del Tanque (L):
                    <input
                        type="number"
                        name="fuel_tank_capacity_liters"
                        value={carInfo.fuel_tank_capacity_liters}
                        required
                    />
                </label>
                <label
                    >Tipo de Motor:
                    <input
                        type="text"
                        name="engine_type"
                        value={carInfo.engine_type}
                        required
                    />
                </label>
            </fieldset>
            <button type="submit">Actualizar Plantilla Técnica</button>
        </form>
    </section>

    <section class="form-section">
        <form
            car-id={car.id}
            action="/api/photos/update"
            enctype="multipart/form-data"
        >
            <fieldset>
                <legend>Fotos</legend>

                {
                    photos.map((photo, index) => (
                        <label>
                            Foto {index}
                            <input
                                type="text"
                                name="photos[]"
                                value={photo.photo_url}
                            />
                            <img src={photo.photo_url} alt="Previsualización" />
                        </label>
                    ))
                }
            </fieldset>
            <fieldset>
                <legend>Subir fotos</legend>
                <label for="photo-upload">Seleccionar fotos:</label>
                <input
                    type="file"
                    id="photo-upload"
                    name="new-photos"
                    accept="image/*"
                    multiple
                    placeholder="..."
                />
                <p class="note">
                    Puedes seleccionar múltiples fotos para cargar.
                </p>
            </fieldset>
            <button type="submit">Actualizar Fotos</button>
        </form>
    </section>
    <section class="form-section">
        <form id="qr-form" data-link={`${Astro.site}/autos/${car.id}`}>
            <fieldset>
                <legend>Código QR</legend>

                <div id="car-qr"></div>
            </fieldset>
        </form>
    </section>
    <a class="edit-button" href={`/autos/${car.id}`}>🔍</a>
</Layout>

<script>
    import QRCodeStyling from "qr-code-styling";

    const qr_form = document.querySelector("#qr-form")!;

    const QR = new QRCodeStyling({
        width: 200,
        height: 200,
        data: qr_form.getAttribute("data-link") as string,
        type: "canvas",
    });

    QR.append(qr_form.querySelector("#car-qr") as HTMLElement);

    const forms = document.querySelectorAll(
        "form",
    ) as NodeListOf<HTMLFormElement>;

    forms.forEach((form) => {
        form.addEventListener("submit", async (e: SubmitEvent) => {
            e.preventDefault();

            const form_actual = e.target as HTMLFormElement;
            const data = new FormData(form_actual);

            const url = form_actual.getAttribute("action");
            const id = form_actual.getAttribute("car-id");

            if (!url || !id) {
                console.error(
                    "No se pudo determinar la URL o el ID del formulario.",
                );
                alert("Error al enviar el formulario: Datos incompletos.");
                return;
            }

            try {
                const response = await fetch(`${url}?id=${id}`, {
                    method: "POST",
                    body: data,
                });

                if (response.ok) {
                    alert("Actualización exitosa.");
                    window.location.reload(); // Recarga la página
                } else {
                    const errorData = await response.json();
                    alert(
                        `Error al actualizar: ${errorData.message || "Error desconocido."}`,
                    );
                }
            } catch (error) {
                console.error("Error al enviar la solicitud:", error);
                alert("Hubo un problema al procesar la solicitud.");
            }
        });
    });
</script>

<style lang="scss">
    // General
    body {
        font-family: "Poppins", sans-serif;
        background-color: #f8f9fa;
        color: #343a40;
    }

    * {
        box-sizing: border-box;
    }

    label img {
        max-width: 100px;
        border-radius: 10px;
    }

    .form-section {
        margin: 5vh auto;
        padding: 20px;
        background-color: #f3f3f3;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        max-width: 800px;
    }

    // Fieldsets y legends
    fieldset {
        border: 1px solid #ced4da;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
    }

    legend {
        font-size: 1.2rem;
        font-weight: 600;
        color: #495057;
        margin-bottom: 10px;
    }

    input[type="file"] {
        display: block;
        margin-bottom: 10px;
        font-size: 1rem;
        padding: 10px;
        border: 1px solid #ced4da;
        border-radius: 4px;
        background-color: #f8f9fa;
        cursor: pointer;
        max-width: min-content;
    }

    // Inputs y botones
    input[type="text"],
    input[type="number"],
    textarea {
        width: 100%;
        padding: 10px;
        margin-top: 8px;
        margin-bottom: 16px;
        border: 1px solid #ced4da;
        border-radius: 4px;
        background-color: #e9ecef;
        box-sizing: border-box;
    }

    button {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1rem;
        transition: background-color 0.3s ease;

        &:hover {
            background-color: #0056b3;
        }
    }

    .add-photo-btn {
        margin-top: 10px;
        background-color: #28a745;
        &:hover {
            background-color: #218838;
        }
    }

    .note {
        font-size: 0.9rem;
        color: #6c757d;
    }

    @media (max-width: 768px) {
        .form-section {
            padding: 15px;
        }
    }

    .edit-button {
        text-decoration: none;
        position: fixed;
        bottom: 2rem; /* Espacio desde el borde inferior */
        right: 2rem; /* Espacio desde el borde derecho */
        background-color: #e4e4e4;
        color: #fff; /* Color del texto (blanco) */
        font-size: 1.5rem; /* Tamaño del emoji */
        width: 3.5rem; /* Ancho del botón */
        height: 3.5rem; /* Alto del botón */
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 50%; /* Hace el botón circular */
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 1); /* Sombra suave */
        cursor: pointer; /* Cambia el cursor a mano al pasar el mouse */
        transition:
            transform 0.3s ease,
            box-shadow 0.3s ease;
        z-index: 1000; /* Asegura que esté sobre otros elementos */
    }

    .edit-button:hover {
        transform: scale(
            1.1
        ); /* Aumenta ligeramente el tamaño al pasar el mouse */
        box-shadow: 0 8px 12px rgba(0, 0, 0, 0.3); /* Sombra más intensa al pasar el mouse */
    }

    .edit-button:active {
        transform: scale(0.95); /* Reduce el tamaño al hacer clic */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Sombra más pequeña */
    }
</style>
