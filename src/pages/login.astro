---
import Navbar from "../components/Navbar.astro";
---

<!doctype html>
<html lang="es">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Login</title>
    </head>
    <body>
        <Navbar />
        <form class="login" action="/login" method="POST">
            <h1>Iniciar Sesi칩n</h1>
            <div class="form-group">
                <label for="username">Usuario</label>
                <input
                    type="text"
                    id="username"
                    name="username"
                    placeholder="Tu usuario"
                    required
                />
            </div>
            <div class="form-group">
                <label for="password">Contrase침a</label>
                <input
                    type="password"
                    id="password"
                    name="password"
                    placeholder="Tu contrase침a"
                    required
                />
            </div>
            <button type="submit" class="login-button">Ingresar</button>
            <p class="response-message" id="responseMessage"></p>
        </form>
    </body>
</html>

<script>
    const login: HTMLFormElement | null = document.querySelector("form.login");
    const responseMessage = document.getElementById("responseMessage")!;

    document.addEventListener("DOMContentLoaded", () => {
        if (!login) {
            alert("La funci칩n de login no esta disponible por ahora");
            return;
        }

        async function handleLogin(credentials: {
            username: string;
            password: string;
        }): Promise<{ message: string; ok: boolean }> {
            try {
                const response = await fetch("/api/login", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(credentials),
                });

                const data = await response.json();

                return {
                    ok: response.ok,
                    message: data.message as string,
                };
            } catch (error) {
                console.log(error);
                return {
                    message: "Error en el servidor",
                    ok: false,
                };
            }
        }

        login.addEventListener("submit", async (e) => {
            e.preventDefault();

            const data = new FormData(e.target as HTMLFormElement);

            const payload = {
                username: data.get("username")!.toString(),
                password: data.get("password")!.toString(),
            };

            responseMessage.innerHTML = "Procesando...";
            responseMessage.style.color = "blue";

            const response = await handleLogin(payload);

            responseMessage.textContent = response.message;
            responseMessage.style.color = response.ok ? "green" : "red";

            if (response.ok) {
                setTimeout(() => {
                    window.location.href = "/panel";
                }, 500);
            }
        });
    });
</script>

<style lang="scss">
    body {
        margin: 0;
        font-family: Arial, sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        background-color: #f0f2f5;
    }

    form.login {
        width: 100%;
        max-width: 400px;
        display: flex;
        flex-direction: column;
        padding: 0 0.75rem;

        * {
            box-sizing: border-box;
        }
    }

    h1 {
        font-size: 2rem;
        margin-bottom: 1.5rem;
        color: #333;
        text-align: center;
        text-decoration: underline;
    }

    .form-group {
        margin-bottom: 1.5rem;
        width: 100%;
    }

    label {
        display: block;
        margin-bottom: 0.5rem;
        color: #555;
        font-weight: bold;
    }

    input {
        padding: 0.75rem;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 1rem;
        width: 100%;
    }

    input:focus {
        outline: none;
        border-color: #007bff;
        box-shadow: 0 0 3px rgba(0, 123, 255, 1);
    }

    .login-button {
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s;
        font-size: 1.1rem;
        padding: 0.75rem;
        min-width: 100%;
    }

    .login-button:hover {
        background-color: #0056b3;
    }
</style>
