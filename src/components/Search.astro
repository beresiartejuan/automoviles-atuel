---
import Title from "@ui/Title.astro";
---

<div class="container">
    <Title tag="h3" variant="compac">Encontra el auto perfecto para vos</Title>
    <section>
        <div class="buttons">
            <button id="new-btn">0km</button>
            <button id="used-btn">Usados</button>
        </div>
        <input
            id="search-input"
            type="text"
            placeholder="Escribí la marca o modelo del auto..."
        />
        <button id="search-btn">Buscar</button>
    </section>
</div>
<script>
    const urlParams = new URLSearchParams(window.location.search);

    let carStatus = urlParams.has("nuevo");
    const searchTerm = urlParams.get("q");

    (document.querySelector("#search-input") as HTMLInputElement).value =
        searchTerm ?? "";

    if (carStatus) {
        document.querySelector("#new-btn")?.classList.add("selected");
    } else {
        document.querySelector("#used-btn")?.classList.add("selected");
    }

    // Cambiar entre botones de estado
    document.getElementById("new-btn")!.addEventListener("click", () => {
        carStatus = true;
        toggleSelected("new-btn", "used-btn");
    });

    document.getElementById("used-btn")!.addEventListener("click", () => {
        carStatus = false;
        toggleSelected("used-btn", "new-btn");
    });

    // Buscar autos al hacer clic
    document.getElementById("search-btn")!.addEventListener("click", () => {
        const searchTerm = (
            document.getElementById("search-input") as HTMLInputElement
        ).value
            .trim()
            .toLowerCase();

        if (searchTerm === "") {
            alert("Por favor, escribí una marca o modelo.");
            return;
        }

        window.location.href = `/autos?q=${encodeURIComponent(searchTerm)}${carStatus ? "&nuevo" : ""}`;
    });

    // Función para alternar clases de botones
    function toggleSelected(selectedId: string, otherId: string) {
        document.getElementById(selectedId)!.classList.add("selected");
        document.getElementById(otherId)!.classList.remove("selected");
    }
</script>

<style lang="scss">
    $padding: 0.8rem 2rem;

    .container {
        margin-top: 15vh !important;
    }

    section {
        font-family: "Kanit", sans-serif;

        padding: 5vh 0 10vh 0;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;

        max-width: fit-content;
        margin: 0 auto;
        gap: 1.2rem;

        .buttons {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            gap: 1rem;

            button {
                padding: $padding;
                background-color: rgba(0, 0, 0, 0.13);
                border: none;
                border-radius: 5px;

                &.selected {
                    background-color: rgba(0, 0, 0, 0.75);
                    color: #ececec;
                }
            }
        }

        input {
            padding: $padding;
            background-color: rgba(0, 0, 0, 0.13);
            border: none;
            border-radius: 5px;
            width: 300px;
        }

        button {
            padding: $padding;
            background-color: transparent;
            border: 2px solid #000;
            font-weight: 600;
            border-radius: 5px;
            max-width: fit-content;
        }

        @media screen and (width < 800px) {
            flex-direction: column;

            .buttons {
                justify-content: center;

                button {
                    margin: 0;
                }
            }

            button {
                margin: 0 auto;
            }

            input {
                width: 70vw;
                padding: 1.2rem 1rem;
            }
        }
    }

    @media screen and (width < 800px) {
        h3 {
            font-size: 1.6rem;
        }
    }
</style>
